{{- /* Code generated by make. DO NOT EDIT. */ -}}
{{- if .Values.lxcfs.useDaemonset -}}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  labels: {{- include "chart.lxcfs.labels" . | nindent 4 }}
  name: '{{ include "chart.fullname" . }}-controller-manager-daemonset'
  namespace: {{ .Release.Namespace | quote }}
spec:
  selector:
    matchLabels: {{- include "chart.lxcfs.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations: {{- toYaml .Values.lxcfs.podAnnotations | nindent 8 }}
      labels: {{- include "chart.lxcfs.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - args: {{- include "chart.lxcfs.args" . | nindent 8 }}
        image: {{ .Values.image.agent }}
        lifecycle:
          postStart:
            exec:
              command:
                - sh
                - -c
                - "lxcfs-remount.sh {{ trimSuffix "/" .Values.lxcfs.mountPath }} || true"
        imagePullPolicy: {{ .Values.pullPolicy | quote }}
        name: agent
        resources: {{- toYaml .Values.lxcfs.resources | nindent 10 }}
        securityContext:
          privileged: true
        volumeMounts:
        - name: cri-socket
          mountPath: {{ .Values.lxcfs.configMaps.crictlConfig.endpoint }}
        - name: crictl-config
          mountPath: /etc/crictl.yaml
          subPath: crictl.yaml
        - mountPath: {{ .Values.lxcfs.mountPath }}
          mountPropagation: Bidirectional
          name: lxcfs
        - mountPath: /sys/fs/cgroup
          name: cgroup
      hostPID: true
      volumes:
      - hostPath:
          path: {{ .Values.lxcfs.mountPath }}
          type: DirectoryOrCreate
        name: lxcfs
      - hostPath:
          path: /sys/fs/cgroup
        name: cgroup
      - name: cri-socket
        hostPath:
          path: {{ .Values.lxcfs.configMaps.crictlConfig.endpoint }}
          type: Socket
      - name: crictl-config
        configMap:
          name: lxcfs-crictl-config
{{- end -}}
